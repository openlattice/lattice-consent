
/*
 * @flow
 */

import {
  CLIENTS_ESID,
  CLIENT_EKID,
  CONSENT_FORMS_ESID,
  CONSENT_FORM_SCHEMAS_ESID,
  DECRYPTED_BY_ESID,
  DIGITAL_SIGNATURES_ESID,
  ELECTRONIC_SIGNATURES_ESID,
  INCLUDES_ESID,
  LOCATED_AT_ESID,
  LOCATION_ESID,
  PUBLIC_KEYS_ESID,
  REDIRECT_URL,
  SCHEMA_EKID,
  SIGNED_BY_ESID,
  STAFF_EKID,
  STAFF_ESID,
  VERIFIES_ESID,
  WITNESSES_ESID,
} from './QueryStringParams';

type RedirectFlowIncomingParamsEnum = {|
  CLIENTS_ESID :typeof CLIENTS_ESID;
  CLIENT_EKID :typeof CLIENT_EKID;
  CONSENT_FORMS_ESID :typeof CONSENT_FORMS_ESID;
  CONSENT_FORM_SCHEMAS_ESID :typeof CONSENT_FORM_SCHEMAS_ESID;
  DECRYPTED_BY_ESID :typeof DECRYPTED_BY_ESID;
  DIGITAL_SIGNATURES_ESID :typeof DIGITAL_SIGNATURES_ESID;
  ELECTRONIC_SIGNATURES_ESID :typeof ELECTRONIC_SIGNATURES_ESID;
  INCLUDES_ESID :typeof INCLUDES_ESID;
  LOCATED_AT_ESID :typeof LOCATED_AT_ESID;
  LOCATION_ESID :typeof LOCATION_ESID;
  PUBLIC_KEYS_ESID :typeof PUBLIC_KEYS_ESID;
  REDIRECT_URL :typeof REDIRECT_URL;
  SCHEMA_EKID :typeof SCHEMA_EKID;
  SIGNED_BY_ESID :typeof SIGNED_BY_ESID;
  STAFF_EKID :typeof STAFF_EKID;
  STAFF_ESID :typeof STAFF_ESID;
  VERIFIES_ESID :typeof VERIFIES_ESID;
  WITNESSES_ESID :typeof WITNESSES_ESID;
|};
type RedirectFlowIncomingParam = $Values<RedirectFlowIncomingParamsEnum>;

// TODO: look into using Immutable.Map() or other possible "enum" libraries
const RedirectFlowIncomingParams :{|...RedirectFlowIncomingParamsEnum |} = Object.freeze({
  CLIENTS_ESID,
  CLIENT_EKID,
  CONSENT_FORMS_ESID,
  CONSENT_FORM_SCHEMAS_ESID,
  DECRYPTED_BY_ESID,
  DIGITAL_SIGNATURES_ESID,
  ELECTRONIC_SIGNATURES_ESID,
  INCLUDES_ESID,
  LOCATED_AT_ESID,
  LOCATION_ESID,
  PUBLIC_KEYS_ESID,
  REDIRECT_URL,
  SCHEMA_EKID,
  SIGNED_BY_ESID,
  STAFF_EKID,
  STAFF_ESID,
  VERIFIES_ESID,
  WITNESSES_ESID,
});

export default RedirectFlowIncomingParams;
export type {
  RedirectFlowIncomingParam,
  RedirectFlowIncomingParamsEnum,
};
